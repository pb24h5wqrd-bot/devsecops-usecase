name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-scan-sign-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      packages: write  # For GHCR push

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ghcr.io/${{ github.repository }}:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Install Trivy
      uses: aquasecurity/setup-trivy@v0.2.4  # Updated to latest stable tag
      with:
        version: 0.67.0  # Latest Trivy release for no version nags

    - name: Scan image with Trivy
      id: trivy
      run: |
        trivy image \
          --exit-code 1 \
          --no-progress \
          --severity CRITICAL,HIGH \
          --format sarif \
          --output trivy-results.sarif \
          --skip-version-check \
          ghcr.io/${{ github.repository }}:latest
      continue-on-error: false  # Stops pipeline on failure

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: trivy-results.sarif

    - name: Generate SBOM with Syft
      uses: anchore/sbom-action@v0.15.2
      with:
        image: ghcr.io/${{ github.repository }}:latest
        format: spdx-json
        output-file: sbom.json

    - name: Install Cosign
      uses: sigstore/cosign-installer@main

    - name: Generate Cosign keypair (demo only, empty passphrase)
      run: echo "" | cosign generate-key-pair

    - name: Sign the container image with Cosign
      env:
        COSIGN_PASSWORD: ""  # Matches empty passphrase
      run: cosign sign -key cosign.key ghcr.io/${{ github.repository }}:latest

    - name: Set up Kind cluster
      uses: helm/kind-action@v1.8.0

    - name: Deploy to Kubernetes (Kind)
      run: |
        kubectl apply -f k8s/
        kubectl rollout status deployment/app --timeout=300s
      if: success()  # Only if all prior steps passed
